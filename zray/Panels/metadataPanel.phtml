<?php
class AwsMetadata {
    static public function getData() {
        return self::getAwsData("http://169.254.169.254/latest/meta-data");
    }

    static private function getAwsData($url)
    {
        $result = [];
        if (self::checkStatus($url)) {
            $data = file_get_contents($url);
        } else {
            return $result;
        }

        foreach(explode("\n",$data) as $name) {
            $name = strstr($name,'=',true) == '' ? $name : strstr($name,'=',true) . '/';
            if(strstr($name,'/')) {
                $result[$name] = self::getAwsData("{$url}/{$name}");
            } else if($name !== "") {
                $result[$name] = file_get_contents("{$url}/{$name}") ;
            }
        }
        return $result;
    }

    static private function checkStatus($url) {
    	$ch = curl_init();
    	curl_setopt($ch, CURLOPT_URL, $url);
    	curl_setopt($ch, CURLOPT_NOBODY, true);
    	curl_setopt($ch, CURLOPT_FOLLOWLOCATION, false);
    	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    	curl_setopt($ch, CURLOPT_VERBOSE, false);
    	curl_setopt($ch, CURLOPT_TIMEOUT, 2);
    	curl_exec($ch);

    	if (curl_exec($ch) === false) {
    	    return false;
    	}

    	$httpcode = curl_getinfo($ch, CURLINFO_HTTP_CODE);

    	curl_close($ch);

    	if ($httpcode >= 200 && $httpcode < 400) {
    	    return true;
    	}

    	return false;
    }
}

$data = AwsMetadata::getData();

$tableParams = [
    'tableId' => 'metadataPanel',
    'tableWidth' => '4',
];
?>

<?php echo $this->zrayTable($tableParams); ?>

<script type="text/javascript">
(function() {
    var storage = zray.getStorage("invalidStorage");
    var data = <?=json_encode($data)?>;
    storage.setData(data);
    var tree = zray.createTreeTable(storage, jQuery('#<?php echo $tableParams['tableId']; ?>'));
})();
</script>
